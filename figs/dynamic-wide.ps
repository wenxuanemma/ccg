%!PS-Adobe-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: matplotlib 1.1.1rc, http://matplotlib.sf.net
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 576 432 0 () ()
%%BoundingBox: 0 0 576 432
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -416 1681 1167] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 38 dict def
CharProcs begin
/parenright {
390 0 80 -131 304 759 setcachedevice
q
80 759 m
158 759 l
206 682 243 607 267 533 c
291 459 304 386 304 314 c
304 241 291 168 267 94 c
243 20 206 -54 158 -131 c
80 -131 l
123 -56 155 17 177 91 c
198 164 209 238 209 314 c
209 389 198 463 177 536 c
155 609 123 683 80 759 c
f
Q
} def
/hyphen {
361 0 49 234 312 314 setcachedevice
q
49 234 263 80 re
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/parenleft {
390 0 86 -131 310 759 setcachedevice
q
310 759 m
266 683 234 609 213 536 c
191 463 181 389 181 314 c
181 238 191 164 213 91 c
234 17 266 -56 310 -131 c
232 -131 l
183 -54 146 20 122 94 c
98 168 86 241 86 314 c
86 386 98 459 122 533 c
146 607 182 682 232 759 c
310 759 l
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/F {
575 0 98 0 517 729 setcachedevice
q
98 729 m
517 729 l
517 646 l
197 646 l
197 431 l
486 431 l
486 348 l
197 348 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/I {
295 0 98 0 197 729 setcachedevice
q
98 0 99 729 re
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
/V {
684 0 8 0 676 729 setcachedevice
q
286 0 m
8 729 l
111 729 l
342 115 l
573 729 l
676 729 l
398 0 l
286 0 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/h {
634 0 91 0 549 760 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 760 l
181 760 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/k {
579 0 91 0 576 760 setcachedevice
q
91 760 m
181 760 l
181 311 l
449 547 l
564 547 l
274 291 l
576 0 l
459 0 l
181 267 l
181 0 l
91 0 l
91 760 l
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/p {
635 0 91 -207 580 560 setcachedevice
q
181 82 m
181 -207 l
91 -207 l
91 547 l
181 547 l
181 464 l
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/w {
818 0 42 0 776 547 setcachedevice
q
42 547 m
132 547 l
244 120 l
356 547 l
462 547 l
574 120 l
686 547 l
776 547 l
633 0 l
527 0 l
409 448 l
291 0 l
185 0 l
42 547 l
f
Q
} def
/U {
732 0 87 -13 645 729 setcachedevice
q
87 729 m
186 729 l
186 286 l
186 208 200 151 228 117 c
256 83 302 66 366 66 c
429 66 475 83 503 117 c
531 151 546 208 546 286 c
546 729 l
645 729 l
645 274 l
645 178 621 107 574 59 c
527 11 458 -13 366 -13 c
274 -13 204 11 157 59 c
110 107 87 178 87 274 c
87 729 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
576 432 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
0 0 576 432 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
2 J
/DeviceGray {} cs
[1] sc
0 w
/DeviceGray {} CS
[1] SC
0 0 576 432 re
f
/DeviceGray {} CS
[0] SC
72 43.2 446.4 345.6 re
f
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0 1] SC
89.761367 43.2 m
89.812879 43.292135 l
90.836949 43.568542 l
91.005694 43.752813 l
91.67599 43.937083 l
91.690677 44.029219 l
94.670187 44.489896 l
94.776244 44.674167 l
95.069725 44.950573 l
95.933724 45.134844 l
96.191977 45.319115 l
96.222097 45.503386 l
96.866265 45.687657 l
96.989511 46.056198 l
97.076517 46.332605 l
97.091896 46.42474 l
97.683647 46.793282 l
97.876711 47.253959 l
98.116392 47.43823 l
98.803877 49.096668 l
98.811221 49.280938 l
99.274564 49.64948 l
99.399832 50.294428 l
99.570759 50.570834 l
99.966093 50.847241 l
100.154208 51.67646 l
100.404851 52.045001 l
100.558004 52.413543 l
100.852868 52.689949 l
101.030287 53.150626 l
101.471759 55.361877 l
101.742304 58.310211 l
101.87018 58.863023 l
102.64515 65.58891 l
102.771057 65.865316 l
102.866312 66.141722 l
103.532351 71.761983 l
103.805557 75.355265 l
104.099304 77.197974 l
104.415295 80.514849 l
104.584945 82.910371 l
104.70553 84.108131 l
104.810629 85.95084 l
104.890079 86.319381 l
105.016412 87.885684 l
105.170682 89.451986 l
105.274186 89.820528 l
105.484438 91.110424 l
105.553884 91.38683 l
105.658771 92.216049 l
106.048464 101.982405 l
106.114344 104.193655 l
106.231737 107.694801 l
107.657527 145.101786 l
107.767576 148.695068 l
107.960214 153.578246 l
108.406848 169.149134 l
108.666856 182.3245 l
109.619938 204.252733 l
109.833064 210.425806 l
109.99356 215.032578 l
110.097542 217.796641 l
110.273844 220.744975 l
110.38368 223.877579 l
110.470793 225.536017 l
110.599307 228.945028 l
110.870491 238.342842 l
110.944193 240.922634 l
111.060468 244.331645 l
111.116717 246.266489 l
111.264654 250.87326 l
111.338783 252.90024 l
111.471608 257.322741 l
111.505506 258.612637 l
112.245407 287.451026 l
112.307243 289.570141 l
112.450072 294.176913 l
112.77197 297.770195 l
113.231056 307.53655 l
113.613832 311.221967 l
113.830151 314.078166 l
114.134115 314.262437 l
114.59054 318.039989 l
114.744757 321.541136 l
114.939631 323.291709 l
115.272012 326.792855 l
115.642974 330.93895 l
115.718859 331.768168 l
115.796978 332.689523 l
115.893191 332.965929 l
116.241377 336.835617 l
116.345838 338.58619 l
116.587753 340.889576 l
116.643363 341.258118 l
116.943549 341.442389 l
117.058706 342.916556 l
118.06181 359.593069 l
118.739397 363.18635 l
118.915272 364.660517 l
119.255476 367.793122 l
119.492283 367.977393 l
119.75426 370.004372 l
120.05897 374.058331 l
120.993532 381.152759 l
121.109594 381.981978 l
121.480982 382.166249 l
121.799953 384.285364 l
122.029841 384.469635 l
122.38899 386.865156 l
122.671349 387.049427 l
122.919543 388.707865 l
123.16098 388.8 l
123.16098 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0.5 0] SC
90.711947 43.2 m
91.5338 43.291695 l
91.631343 43.383391 l
91.73309 43.475086 l
94.753894 43.658477 l
95.272847 44.116954 l
96.857324 44.758822 l
97.003506 45.033908 l
97.165546 45.217299 l
97.294805 45.859167 l
97.550397 46.225949 l
97.608188 46.317644 l
97.826264 46.501035 l
97.973989 46.684426 l
98.290033 47.142903 l
98.511035 47.326293 l
98.786476 48.059857 l
99.094005 48.243248 l
99.336879 48.610029 l
99.476142 48.976811 l
99.791548 49.343592 l
99.898244 49.618679 l
99.950661 49.710374 l
100.425871 49.893765 l
100.508461 50.168851 l
100.666882 50.352242 l
100.827804 50.719024 l
101.028744 50.902414 l
101.293648 51.911064 l
101.406358 53.103104 l
102.09943 57.321093 l
102.205435 57.871266 l
102.328893 58.421438 l
102.489975 58.971611 l
102.641106 60.255346 l
103.017868 63.923163 l
103.087314 64.289944 l
104.686532 79.052905 l
104.757308 79.419687 l
104.916421 80.520032 l
105.704535 86.021756 l
105.81634 90.056354 l
107.096215 119.582276 l
107.220738 123.250093 l
107.298006 127.1013 l
107.709571 140.48883 l
107.828081 145.256991 l
107.98166 150.66702 l
108.156205 157.635872 l
108.22895 160.019952 l
108.543876 170.840011 l
108.750776 175.333086 l
109.040266 182.026851 l
109.587796 195.964553 l
110.063219 205.684266 l
110.204292 209.81056 l
110.422793 217.78806 l
110.541728 222.281136 l
110.901089 232.917803 l
111.083191 237.869355 l
111.30398 242.17904 l
111.381621 243.462775 l
111.528282 245.755161 l
111.578942 246.855505 l
111.759288 251.715362 l
111.85598 254.741311 l
111.995456 257.033696 l
112.098108 257.767259 l
113.41965 281.51637 l
113.849734 285.550968 l
114.115596 289.952348 l
114.431693 294.078642 l
114.570957 295.820854 l
114.717831 296.921199 l
114.806221 297.287981 l
114.973316 297.471372 l
115.077777 297.929849 l
115.310167 298.11324 l
115.423355 299.488671 l
115.570442 301.414274 l
115.661972 302.331228 l
116.196996 309.391775 l
116.41076 310.49212 l
116.430184 310.583815 l
116.847336 310.767206 l
117.435469 320.211833 l
118.072027 326.813903 l
118.274244 329.839851 l
119.065924 338.642611 l
119.35882 346.986893 l
120.399599 364.500716 l
120.528858 365.601061 l
120.758747 368.902096 l
121.606888 377.796551 l
122.232271 378.071637 l
122.720892 381.189281 l
123.517255 385.132184 l
123.622141 385.498965 l
124.44575 385.682356 l
124.448411 385.774051 l
124.66787 385.957442 l
124.704216 386.140833 l
127.08777 386.59931 l
128.394359 386.966092 l
131.102471 387.149483 l
131.118542 387.241178 l
134.351355 387.516264 l
138.375901 387.79135 l
147.258128 387.974741 l
164.906306 388.616609 l
165.517481 388.8 l
165.517481 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[1 0 0] SC
92.4094 43.2 m
94.196573 43.291043 l
95.740447 43.382086 l
113.595792 43.564173 l
114.444571 44.019389 l
114.536155 44.201475 l
114.9267 44.474605 l
115.114868 44.565648 l
115.999834 44.747734 l
116.102965 44.838778 l
116.774591 45.111907 l
117.116072 45.385037 l
117.192649 45.47608 l
118.019131 45.74921 l
118.831565 46.204426 l
119.157028 46.477555 l
122.484032 46.659642 l
161.95383 46.841728 l
162.321014 47.843203 l
163.455345 48.02529 l
163.642609 48.753635 l
164.074023 52.213277 l
164.158848 52.668493 l
164.27044 53.305796 l
164.464196 54.489357 l
165.051157 59.67882 l
165.417915 61.135511 l
165.764079 62.956375 l
165.93458 64.322023 l
166.03191 65.778714 l
166.192407 67.781665 l
166.931617 75.247208 l
167.079821 76.15764 l
167.212432 77.250158 l
167.307262 77.978504 l
167.467971 79.708325 l
167.775128 82.71275 l
168.108361 86.809694 l
168.230436 87.082824 l
168.564573 88.812645 l
169.722798 105.473551 l
169.953326 109.843625 l
170.046399 111.573446 l
170.156926 113.030137 l
170.332323 114.122655 l
170.776243 120.22255 l
170.949883 122.77176 l
171.83288 129.964173 l
172.529518 138.340148 l
172.668995 139.341623 l
172.816294 140.161012 l
172.980835 140.434141 l
173.793003 147.262381 l
173.953499 147.444468 l
174.217765 148.445943 l
174.716869 148.62803 l
174.988478 149.629505 l
175.430642 149.811591 l
175.710287 150.813066 l
184.275405 150.995153 l
184.864442 153.089146 l
185.760796 153.271233 l
186.05747 154.363751 l
186.302951 155.911486 l
186.407625 156.821918 l
186.776618 159.462171 l
186.944671 161.920337 l
187.907969 178.581243 l
188.02004 180.402107 l
188.13541 182.405058 l
188.326293 186.502002 l
188.454594 188.687039 l
188.526913 189.688514 l
188.737379 192.875026 l
189.237121 201.706217 l
189.555613 210.628451 l
189.610531 211.629926 l
189.739152 215.089568 l
190.122353 225.741623 l
190.334841 232.842993 l
190.439302 235.938462 l
190.57633 239.398103 l
190.745075 244.13235 l
191.015354 250.778504 l
191.062663 252.235195 l
191.392809 262.158904 l
191.468959 264.434984 l
192.262395 284.009273 l
192.450989 290.47334 l
193.208505 314.05353 l
194.284141 349.469336 l
194.364495 351.017071 l
195.487598 370.773446 l
195.691625 372.867439 l
196.108565 377.055427 l
196.287367 378.056902 l
196.411198 379.058377 l
196.682648 380.970285 l
197.315854 385.613488 l
197.55133 386.52392 l
197.732315 386.706006 l
198.28341 388.8 l
198.28341 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
83.291218 43.2 m
83.432291 44.057805 l
84.00813 44.248428 l
84.1599 45.010921 l
84.717912 45.201544 l
84.861646 45.964038 l
85.075251 46.154661 l
85.245327 47.012466 l
85.781042 47.203089 l
85.935047 47.965582 l
86.261787 48.156205 l
86.422496 48.918698 l
86.984287 49.109322 l
87.084491 49.871815 l
87.619089 50.062438 l
87.718867 50.824931 l
90.918634 51.110866 l
90.946997 51.206178 l
93.531864 51.301489 l
105.713901 51.492113 l
106.02191 52.635852 l
107.053111 56.543629 l
107.200623 56.924876 l
108.051478 59.974848 l
108.200799 60.165472 l
109.19294 63.882625 l
109.362111 64.16856 l
109.996913 66.074793 l
110.124788 66.932598 l
110.90061 67.218533 l
111.265346 67.695091 l
111.480016 68.457584 l
112.328848 69.124766 l
112.54091 69.601324 l
112.683101 69.791947 l
112.80028 69.98257 l
113.240209 70.459129 l
113.394213 70.840375 l
114.607942 72.937231 l
114.993006 73.127854 l
116.18731 74.271594 l
116.649376 75.891892 l
117.230804 75.987204 l
152.092181 76.177827 l
152.770034 77.607501 l
153.412659 77.988748 l
153.734503 78.846553 l
153.766432 78.941864 l
153.980942 79.132488 l
154.302786 80.085604 l
155.119903 81.324655 l
158.375279 81.515279 l
158.715217 82.563707 l
159.264289 82.75433 l
159.626311 83.612135 l
160.998354 88.187093 l
161.104837 88.377716 l
161.24027 89.14021 l
161.601653 91.046442 l
161.714522 91.618312 l
161.847347 92.762052 l
161.982406 94.191726 l
162.35092 96.574517 l
162.512109 97.146387 l
162.732845 98.385438 l
162.944374 99.815113 l
163.582316 103.532267 l
163.705296 104.86663 l
163.886493 106.01037 l
164.072001 107.154109 l
164.19232 107.725979 l
164.428275 109.155654 l
164.818608 113.825924 l
165.177064 115.827468 l
165.274607 116.208715 l
165.560319 116.399338 l
165.985454 119.068064 l
166.178571 119.544622 l
166.403777 120.497739 l
166.701728 122.213348 l
167.300823 126.216437 l
167.432689 127.169553 l
168.169718 134.508549 l
168.608316 136.224159 l
169.257805 136.414782 l
169.613601 137.367899 l
170.150168 138.416327 l
175.104115 138.60695 l
175.701613 138.797573 l
175.741152 138.892885 l
177.179235 139.083508 l
177.730755 140.227248 l
180.687063 140.417871 l
180.886566 141.180364 l
181.681385 141.370987 l
182.132649 141.561611 l
182.316187 141.942857 l
182.413252 142.038169 l
182.910067 142.228792 l
183.279007 143.27722 l
183.436204 143.658467 l
183.803814 145.469388 l
184.09011 147.470932 l
185.128016 156.620849 l
185.235138 157.573966 l
185.822845 160.338003 l
185.966366 161.958301 l
186.132237 163.197352 l
186.356059 165.008274 l
186.919181 167.676999 l
187.042001 168.916051 l
187.557123 173.872256 l
187.898657 175.969112 l
188.070009 177.112852 l
188.34859 181.211252 l
188.435171 182.25968 l
188.603915 184.928406 l
189.032243 188.931495 l
189.70387 195.698621 l
189.773741 196.461114 l
189.869475 197.604854 l
190.124322 197.795477 l
190.232827 198.748593 l
190.487248 199.511087 l
190.652854 199.797022 l
190.873164 201.036073 l
191.364871 203.80011 l
191.853917 204.848538 l
192.169109 205.039162 l
192.321304 205.229785 l
196.641779 205.420408 l
197.285042 205.611031 l
197.916279 210.090678 l
198.32513 210.75786 l
198.468917 211.043795 l
238.140028 211.234418 l
239.190173 213.521897 l
243.81871 213.712521 l
244.11847 213.903144 l
244.184084 214.093767 l
245.281325 214.665637 l
245.348748 214.760949 l
245.842903 215.046884 l
245.855408 215.142195 l
246.029741 215.332819 l
246.166131 215.904688 l
246.503568 216.095312 l
246.822751 217.048428 l
248.891113 217.239051 l
249.196248 217.429675 l
266.70495 217.620298 l
267.265836 217.810921 l
267.707574 218.096856 l
268.126483 218.382791 l
268.215777 218.764038 l
268.331839 219.335907 l
268.440983 219.717154 l
268.879369 221.528075 l
269.487563 221.718698 l
269.600273 222.481191 l
270.652919 222.671815 l
271.033034 223.624931 l
271.270054 224.863982 l
271.846852 225.054606 l
272.256394 226.960838 l
272.380226 227.151462 l
272.717024 228.867071 l
274.669589 229.057694 l
274.907993 230.010811 l
275.295451 230.201434 l
275.454618 231.15455 l
278.637408 231.345174 l
279.473736 231.535797 l
279.673505 232.012355 l
279.872157 232.29829 l
280.014773 232.87016 l
281.930514 233.060783 l
282.050141 233.346718 l
282.286522 233.727965 l
282.310203 233.823276 l
282.478469 234.0139 l
282.52599 234.109211 l
282.783817 234.299835 l
282.832668 234.490458 l
283.148074 234.681081 l
283.608543 236.396691 l
283.838432 236.587314 l
284.405811 238.016988 l
284.74644 238.207612 l
285.00134 238.874793 l
285.135921 239.160728 l
285.684568 239.351351 l
285.924248 240.018533 l
286.14078 240.495091 l
286.346988 241.352896 l
286.639192 241.543519 l
286.759032 242.020077 l
291.684828 242.2107 l
291.958034 242.877882 l
292.712251 244.593491 l
293.594343 244.784115 l
293.950564 246.213789 l
294.219939 246.404413 l
294.480852 247.452841 l
305.603591 247.643464 l
305.62791 247.738776 l
306.205985 247.929399 l
306.363342 248.405957 l
307.131394 248.59658 l
307.368414 249.549697 l
308.477522 249.74032 l
308.756049 250.88406 l
311.917447 251.074683 l
312.158512 251.837176 l
312.852648 252.027799 l
313.2524 254.029344 l
313.398156 254.791837 l
313.547477 255.077772 l
314.011086 257.079316 l
314.66909 257.269939 l
314.860824 258.032432 l
314.994234 258.985549 l
315.157178 260.129288 l
315.292025 261.273028 l
315.450287 262.130833 l
315.598703 262.416768 l
315.717213 262.702703 l
316.221 264.799559 l
316.576317 264.990182 l
316.965372 266.515168 l
318.004342 266.705792 l
318.248971 267.372973 l
318.352954 267.658908 l
318.759197 267.849531 l
319.359835 269.946387 l
324.056593 270.13701 l
324.297232 271.090127 l
324.935599 271.28075 l
325.34759 272.805736 l
325.60563 272.99636 l
325.850685 273.949476 l
334.301976 274.140099 l
334.768885 275.569774 l
334.936725 276.141644 l
335.084929 276.713514 l
335.572432 276.904137 l
335.599199 276.999448 l
336.191376 277.190072 l
336.629708 278.81037 l
337.325654 279.000993 l
337.348856 279.096304 l
337.873396 279.477551 l
337.986372 279.668174 l
340.439052 279.858798 l
340.748178 280.716602 l
340.843965 281.097849 l
341.115575 281.288472 l
341.231424 281.76503 l
341.50149 281.955654 l
341.547894 282.146277 l
346.421911 282.3369 l
347.05517 284.910314 l
347.440606 285.100938 l
347.699764 286.149366 l
347.96983 286.339989 l
348.775346 289.485273 l
371.057223 289.675896 l
371.244912 289.86652 l
371.819421 290.057143 l
371.889718 290.247766 l
372.569594 290.533701 l
373.690302 290.724324 l
373.777362 290.914948 l
374.902913 291.105571 l
375.050904 291.772752 l
378.639512 291.963376 l
394.812144 292.153999 l
394.959231 292.344622 l
395.135798 292.535245 l
395.504525 295.203971 l
395.748516 297.205516 l
396.042157 299.111748 l
396.281252 299.969553 l
396.573402 301.494539 l
396.733686 302.733591 l
397.025198 304.544512 l
397.28079 305.878875 l
397.370723 306.546056 l
398.422199 307.117926 l
398.515059 307.403861 l
398.604567 307.785108 l
398.771023 307.880419 l
401.391384 308.071042 l
401.552998 309.024159 l
401.960147 311.883508 l
402.102284 312.360066 l
402.291357 313.122559 l
415.165775 313.313183 l
415.408169 314.075676 l
416.056115 314.266299 l
416.633977 315.600662 l
417.008505 316.363155 l
417.459608 316.553778 l
417.698171 317.79283 l
417.822056 318.555323 l
418.401035 320.461555 l
418.637842 321.31936 l
418.795412 322.4631 l
418.944095 323.511528 l
419.082454 323.702151 l
420.238657 328.372421 l
420.294639 328.658356 l
428.75503 328.84898 l
428.891846 329.134915 l
429.190489 329.516161 l
429.260839 329.802096 l
432.681607 329.992719 l
433.249837 331.80364 l
439.756119 331.994264 l
440.530611 335.044236 l
440.708349 335.234859 l
440.976606 335.902041 l
441.10097 336.187976 l
441.445324 337.998897 l
441.564526 338.952013 l
442.08433 341.430116 l
442.182778 342.001986 l
442.448214 343.336349 l
442.564702 343.908218 l
443.209083 346.862879 l
443.362182 347.244126 l
443.829144 347.434749 l
444.100062 348.101931 l
444.369064 348.769112 l
444.660097 348.959735 l
444.959431 349.722228 l
445.704655 351.628461 l
445.830083 352.390954 l
445.997923 353.630006 l
446.222224 354.964368 l
462.437694 355.154992 l
463.40956 359.539327 l
463.622527 361.540871 l
463.762855 362.493988 l
463.861782 363.161169 l
464.506801 365.639272 l
464.867067 367.450193 l
465.018836 368.498621 l
465.410126 370.500165 l
465.578392 371.643905 l
466.201327 371.834528 l
466.272316 372.120463 l
467.03212 372.311087 l
467.057078 372.406398 l
467.979135 372.597022 l
468.352757 374.503254 l
468.47148 375.170436 l
469.305147 378.31572 l
474.01755 378.506343 l
474.34743 379.840706 l
474.729567 380.031329 l
475.086001 381.365692 l
475.109895 381.461004 l
475.339784 381.651627 l
475.533753 382.41412 l
485.567712 382.604744 l
485.684253 382.890678 l
486.635046 383.081302 l
486.777024 383.653172 l
487.043312 383.843795 l
487.523417 385.750028 l
496.397609 385.940651 l
496.82567 387.560949 l
497.079719 387.751572 l
497.348189 388.8 l
497.348189 388.8 l
S
Q
0 J
/DeviceGray {} cs
[0] sc
0.5 w
/DeviceGray {} CS
[0] SC
72 43.2 m
72 47.2 l
f
72 43.2 m
72 47.2 l
S
72 388.8 m
72 384.8 l
f
72 388.8 m
72 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
68.976563 30.29375 Td
/F14_0 12 Tf
(0) 7.632 Tj
/DeviceGray {} cs
[0] sc
0.5 w
183.6 43.2 m
183.6 47.2 l
f
183.6 43.2 m
183.6 47.2 l
S
183.6 388.8 m
183.6 384.8 l
f
183.6 388.8 m
183.6 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
172.998438 30.29375 Td
/F14_0 12 Tf
(500) 22.896 Tj
/DeviceGray {} cs
[0] sc
0.5 w
295.2 43.2 m
295.2 47.2 l
f
295.2 43.2 m
295.2 47.2 l
S
295.2 388.8 m
295.2 384.8 l
f
295.2 388.8 m
295.2 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
280.973437 30.29375 Td
/F14_0 12 Tf
(1000) 30.528 Tj
/DeviceGray {} cs
[0] sc
0.5 w
406.8 43.2 m
406.8 47.2 l
f
406.8 43.2 m
406.8 47.2 l
S
406.8 388.8 m
406.8 384.8 l
f
406.8 388.8 m
406.8 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
392.573437 30.29375 Td
/F14_0 12 Tf
(1500) 30.528 Tj
/DeviceGray {} cs
[0] sc
0.5 w
518.4 43.2 m
518.4 47.2 l
f
518.4 43.2 m
518.4 47.2 l
S
518.4 388.8 m
518.4 384.8 l
f
518.4 388.8 m
518.4 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
503.954688 30.29375 Td
/F14_0 12 Tf
(2000) 30.528 Tj
[1 0 0 1 0 0] Tm
0 0 Td
265.457813 15.996875 Td
/F14_0 12 Tf
(Time \(ms\)) 60.852 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 43.2 m
76 43.2 l
f
72 43.2 m
76 43.2 l
S
518.4 43.2 m
514.4 43.2 l
f
518.4 43.2 m
514.4 43.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.5 38.832813 Td
/F14_0 12 Tf
(0.0) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 112.32 m
76 112.32 l
f
72 112.32 m
76 112.32 l
S
518.4 112.32 m
514.4 112.32 l
f
518.4 112.32 m
514.4 112.32 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.90625 107.952813 Td
/F14_0 12 Tf
(0.2) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 181.44 m
76 181.44 l
f
72 181.44 m
76 181.44 l
S
518.4 181.44 m
514.4 181.44 l
f
518.4 181.44 m
514.4 181.44 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.375 177.072813 Td
/F14_0 12 Tf
(0.4) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 250.56 m
76 250.56 l
f
72 250.56 m
76 250.56 l
S
518.4 250.56 m
514.4 250.56 l
f
518.4 250.56 m
514.4 250.56 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.46875 246.192813 Td
/F14_0 12 Tf
(0.6) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 319.68 m
76 319.68 l
f
72 319.68 m
76 319.68 l
S
518.4 319.68 m
514.4 319.68 l
f
518.4 319.68 m
514.4 319.68 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.53125 315.312813 Td
/F14_0 12 Tf
(0.8) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 388.8 m
76 388.8 l
f
72 388.8 m
76 388.8 l
S
518.4 388.8 m
514.4 388.8 l
f
518.4 388.8 m
514.4 388.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
51.015625 384.432812 Td
/F14_0 12 Tf
(1.0) 19.08 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 45.375 134.414062] Tm
0 0 Td
0 2.5 Td
/F14_0 12 Tf
(Fraction of applied updates) 164.604 Tj
2 J
72 388.8 m
518.4 388.8 l
S
518.4 43.2 m
518.4 388.8 l
S
72 43.2 m
518.4 43.2 l
S
72 43.2 m
72 388.8 l
S
0 J
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
152.278125 393.8 Td
/F14_0 14.4 Tf
(Time to use the new configuration rules) 287.4528 Tj
2 J
/DeviceGray {} cs
[1] sc
320.000625 50.4 191.199375 84.604375 re
f
320.000625 50.4 191.199375 84.604375 re
S
/DeviceRGB {} CS
[0 0 1] SC
330.080625 123.64375 m
350.240625 123.64375 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 118.60375 Td
/F14_0 14.4 Tf
(VF-loop) 54.1008 Tj
2 J
/DeviceRGB {} CS
[0 0.5 0] SC
330.080625 102.896875 m
350.240625 102.896875 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 97.856875 Td
/F14_0 14.4 Tf
(VF-loop-blackhole) 128.3328 Tj
2 J
/DeviceRGB {} CS
[1 0 0] SC
330.080625 82.15 m
350.240625 82.15 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 77.11 Td
/F14_0 14.4 Tf
(Consistent-Updates) 141.1344 Tj
2 J
/DeviceRGB {} CS
[0 0.75 0.75] SC
330.080625 61.403125 m
350.240625 61.403125 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 56.363125 Td
/F14_0 14.4 Tf
(Incremental CU) 111.7296 Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
