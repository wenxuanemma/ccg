%!PS-Adobe-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: matplotlib 1.1.1rc, http://matplotlib.sf.net
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: plain 576 432 0 () ()
%%BoundingBox: 0 0 576 432
%%Pages: 1
%%EndComments
%%BeginDefaults
%%PageMedia: plain
%%EndDefaults
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -416 1681 1167] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 37 dict def
CharProcs begin
/parenright {
390 0 80 -131 304 759 setcachedevice
q
80 759 m
158 759 l
206 682 243 607 267 533 c
291 459 304 386 304 314 c
304 241 291 168 267 94 c
243 20 206 -54 158 -131 c
80 -131 l
123 -56 155 17 177 91 c
198 164 209 238 209 314 c
209 389 198 463 177 536 c
155 609 123 683 80 759 c
f
Q
} def
/hyphen {
361 0 49 234 312 314 setcachedevice
q
49 234 263 80 re
f
Q
} def
/period {
318 0 107 0 210 124 setcachedevice
q
107 0 103 124 re
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/parenleft {
390 0 86 -131 310 759 setcachedevice
q
310 759 m
266 683 234 609 213 536 c
191 463 181 389 181 314 c
181 238 191 164 213 91 c
234 17 266 -56 310 -131 c
232 -131 l
183 -54 146 20 122 94 c
98 168 86 241 86 314 c
86 386 98 459 122 533 c
146 607 182 682 232 759 c
310 759 l
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/F {
575 0 98 0 517 729 setcachedevice
q
98 729 m
517 729 l
517 646 l
197 646 l
197 431 l
486 431 l
486 348 l
197 348 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/I {
295 0 98 0 197 729 setcachedevice
q
98 0 99 729 re
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
/V {
684 0 8 0 676 729 setcachedevice
q
286 0 m
8 729 l
111 729 l
342 115 l
573 729 l
676 729 l
398 0 l
286 0 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/f {
352 0 23 0 371 760 setcachedevice
q
371 760 m
371 685 l
285 685 l
253 685 230 678 218 665 c
205 652 199 629 199 595 c
199 547 l
347 547 l
347 477 l
199 477 l
199 0 l
109 0 l
109 477 l
23 477 l
23 547 l
109 547 l
109 585 l
109 645 123 690 151 718 c
179 746 224 760 286 760 c
371 760 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/h {
634 0 91 0 549 760 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 760 l
181 760 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/k {
579 0 91 0 576 760 setcachedevice
q
91 760 m
181 760 l
181 311 l
449 547 l
564 547 l
274 291 l
576 0 l
459 0 l
181 267 l
181 0 l
91 0 l
91 760 l
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/p {
635 0 91 -207 580 560 setcachedevice
q
181 82 m
181 -207 l
91 -207 l
91 547 l
181 547 l
181 464 l
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/w {
818 0 42 0 776 547 setcachedevice
q
42 547 m
132 547 l
244 120 l
356 547 l
462 547 l
574 120 l
686 547 l
776 547 l
633 0 l
527 0 l
409 448 l
291 0 l
185 0 l
42 547 l
f
Q
} def
/U {
732 0 87 -13 645 729 setcachedevice
q
87 729 m
186 729 l
186 286 l
186 208 200 151 228 117 c
256 83 302 66 366 66 c
429 66 475 83 503 117 c
531 151 546 208 546 286 c
546 729 l
645 729 l
645 274 l
645 178 621 107 574 59 c
527 11 458 -13 366 -13 c
274 -13 204 11 157 59 c
110 107 87 178 87 274 c
87 729 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
576 432 false pdfSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
pdfStartPage
0 0 576 432 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
2 J
/DeviceGray {} cs
[1] sc
0 w
/DeviceGray {} CS
[1] SC
0 0 576 432 re
f
/DeviceGray {} CS
[0] SC
72 43.2 446.4 345.6 re
f
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0 1] SC
93.13202 43.2 m
93.3357 43.561885 l
93.522618 45.371309 l
93.768937 47.542618 l
94.20224 48.748901 l
94.918448 48.869529 l
95.650022 51.402723 l
96.037826 51.885236 l
96.367294 52.126492 l
96.562593 52.367749 l
96.665564 52.609005 l
96.845497 52.850262 l
96.948735 53.332775 l
97.152415 55.021571 l
97.188136 55.262827 l
97.469111 55.504084 l
97.676051 58.037277 l
97.71849 58.278534 l
97.863833 58.519791 l
98.06166 59.846702 l
98.315562 60.087958 l
98.342037 60.208586 l
98.702768 60.449843 l
98.815518 60.811728 l
99.135007 61.776754 l
99.206449 62.138639 l
99.468666 62.500524 l
99.792279 63.586178 l
99.907224 63.827435 l
100.00208 64.068691 l
100.388753 64.309948 l
100.46219 64.913089 l
100.805094 65.154346 l
100.941525 66.24 l
101.082943 66.601885 l
101.163631 67.205026 l
101.638442 67.446283 l
101.758708 67.808168 l
101.869462 68.170052 l
102.364095 69.496963 l
102.530991 70.944503 l
102.684184 71.909529 l
102.860991 72.995183 l
103.066933 73.598325 l
103.289571 74.442723 l
103.483739 74.804607 l
103.604537 75.045864 l
103.759393 75.28712 l
103.87181 76.252147 l
104.026932 76.493403 l
104.25855 77.096545 l
104.469149 78.182199 l
104.516577 78.664712 l
104.679281 78.905969 l
105.322917 81.801047 l
105.392962 82.404188 l
105.524602 82.766073 l
105.65438 83.369215 l
105.816487 83.972356 l
105.947329 85.299267 l
106.187528 86.264293 l
106.299413 86.50555 l
106.387284 87.349948 l
106.487195 87.832461 l
106.628348 89.28 l
106.799368 89.883141 l
106.988281 90.486283 l
107.109944 90.968796 l
107.244379 91.692565 l
107.5499 96.758953 l
107.898325 107.132984 l
108.06103 111.958115 l
108.215886 118.110157 l
108.626573 133.068063 l
108.672604 134.515602 l
108.812093 138.85822 l
108.923113 142.115183 l
109.383756 158.882513 l
109.544731 165.39644 l
109.660275 169.377173 l
109.761583 172.754764 l
109.951826 180.113089 l
110.188101 187.592042 l
110.425573 196.880419 l
110.57983 202.911832 l
110.681138 206.410052 l
110.730761 207.857592 l
110.898455 213.647749 l
110.959253 215.336545 l
111.208433 221.971099 l
111.695018 234.998953 l
111.924042 241.51288 l
112.00413 243.684188 l
112.156724 248.388691 l
112.211137 249.594974 l
112.551247 258.521466 l
112.587766 259.365864 l
112.665061 260.934031 l
112.889096 267.447958 l
112.940449 268.533613 l
113.246768 278.183874 l
113.319606 279.993298 l
113.505193 284.577173 l
114.25792 302.068272 l
114.367277 303.757068 l
114.514882 306.41089 l
114.66854 308.823455 l
114.763995 309.667853 l
115.147342 313.648586 l
115.327874 315.096126 l
115.423262 315.940524 l
115.56834 316.543665 l
115.766499 317.629319 l
116.020867 318.835602 l
116.304902 319.800628 l
116.722574 320.886283 l
121.431838 321.006911 l
121.781128 323.17822 l
121.939043 324.143246 l
122.033633 324.987644 l
122.808111 328.003351 l
123.324297 329.571518 l
123.43086 330.415916 l
123.547201 331.139686 l
124.432433 337.894869 l
124.564739 338.859895 l
125.137466 345.976963 l
125.286202 347.183246 l
125.420104 348.510157 l
125.706933 353.576545 l
126.327687 362.623665 l
126.652165 364.433089 l
126.823451 366.48377 l
126.945646 367.569424 l
127.091921 369.740733 l
127.202675 371.429529 l
127.319016 373.600838 l
127.973228 385.422408 l
128.281277 387.593717 l
128.55274 388.8 l
128.55274 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0.5 0] SC
93.493616 43.2 m
93.609092 43.79361 l
94.115234 50.323325 l
94.140045 50.442047 l
95.157583 50.560769 l
95.245188 51.035658 l
95.518847 51.273102 l
95.654479 51.629268 l
95.733436 52.104157 l
95.894412 52.935211 l
96.152771 53.4101 l
96.219157 53.647544 l
97.109444 54.00371 l
97.31339 54.834765 l
97.419155 55.072209 l
97.558379 55.784541 l
97.669665 56.021986 l
97.97911 59.464926 l
97.997004 59.70237 l
98.126982 59.939814 l
98.258689 60.295981 l
98.464565 60.533425 l
98.611837 61.008313 l
98.924875 61.245757 l
99.215029 61.95809 l
99.638288 63.145311 l
99.84616 63.976366 l
100.030616 64.21381 l
100.511813 66.469529 l
100.951835 67.538028 l
101.226358 68.487805 l
101.640703 68.725249 l
102.083719 70.50608 l
102.349927 70.743525 l
102.59904 73.474133 l
102.713452 74.780076 l
102.782897 75.729852 l
103.083695 75.967296 l
103.413695 76.679629 l
103.476489 77.035795 l
103.71589 77.273239 l
103.862098 77.985572 l
103.980901 78.341738 l
104.093051 78.816627 l
104.274448 79.410237 l
104.865601 80.003847 l
105.470522 81.428513 l
105.594646 82.615733 l
105.731343 82.853178 l
105.86305 83.209344 l
106.047772 83.684232 l
106.152074 84.515287 l
106.298881 85.108897 l
106.465444 86.533562 l
106.578991 86.771007 l
106.71316 87.364617 l
106.857439 88.433116 l
107.266995 90.213947 l
107.439678 90.451391 l
107.685797 94.131776 l
107.879633 101.017657 l
108.178768 113.958365 l
108.303491 118.469804 l
108.44797 123.93102 l
108.523602 126.661628 l
108.689898 132.479011 l
109.218058 150.524768 l
109.267747 151.711989 l
109.400519 155.74854 l
109.565086 160.378701 l
109.739498 166.908416 l
110.049476 179.61168 l
110.312026 187.922226 l
110.397702 190.771556 l
110.574841 196.707661 l
111.461204 220.333356 l
111.703665 224.251185 l
112.127988 237.666781 l
112.26974 242.059498 l
112.409296 246.452216 l
112.608187 253.100653 l
112.755194 257.255926 l
112.950493 263.073308 l
113.005238 264.379251 l
115.06446 314.123806 l
115.294682 315.073583 l
115.669116 316.02336 l
121.527492 316.142082 l
121.860618 317.210581 l
122.106471 318.160357 l
123.128399 318.279079 l
123.362479 319.585022 l
123.686159 321.009687 l
123.797179 321.840742 l
123.906536 322.909241 l
124.050483 324.215184 l
124.275649 327.064514 l
124.552433 330.032566 l
125.053253 333.000618 l
125.289262 333.238063 l
125.544029 334.306561 l
125.752698 337.037169 l
126.625425 351.402542 l
126.827974 353.183373 l
127.269859 356.863758 l
127.413872 358.050979 l
128.000301 368.617245 l
128.111654 370.991687 l
128.218283 373.247406 l
128.373605 376.452903 l
128.455356 377.521402 l
128.58427 379.777121 l
128.681919 380.84562 l
128.795533 382.032841 l
129.142562 384.288561 l
131.003491 388.8 l
131.003491 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[1 0 0] SC
182.342223 43.2 m
182.672023 44.043221 l
182.915016 44.645521 l
183.51016 44.886441 l
183.728341 46.572883 l
183.920847 49.704845 l
184.01098 50.668526 l
184.303064 56.45061 l
184.497831 59.341652 l
185.290402 67.773858 l
186.011931 81.867689 l
186.164858 82.95183 l
186.446099 86.927013 l
186.589248 90.420356 l
186.682973 92.106797 l
187.30346 104.273266 l
188.208847 120.535378 l
188.553946 127.522063 l
188.719312 129.690345 l
188.959046 133.304148 l
189.084633 135.59289 l
189.236097 138.604392 l
189.339267 140.411293 l
189.550531 145.952457 l
189.687493 148.96396 l
189.933613 153.180063 l
190.079555 155.830185 l
190.2692 159.925828 l
190.44614 164.021471 l
190.650086 168.839875 l
190.766694 171.249076 l
192.314586 194.497874 l
192.806426 197.027536 l
192.954031 198.352597 l
193.202944 199.677658 l
210.401575 199.798118 l
210.874457 201.725479 l
211.399291 201.845939 l
211.610754 203.29146 l
211.884212 206.182503 l
212.499977 218.469432 l
212.577804 219.553573 l
212.817205 222.805995 l
212.899422 223.890136 l
213.925341 246.416173 l
214.044743 246.657093 l
214.317337 251.355037 l
214.375674 252.198257 l
214.499532 255.209759 l
214.567314 256.655281 l
214.685651 259.666783 l
214.742591 260.750924 l
214.872835 264.364726 l
215.374187 273.399233 l
215.445628 274.724294 l
215.539087 276.651656 l
215.672723 279.783618 l
215.788532 281.349599 l
215.912989 283.879261 l
215.993876 285.806623 l
216.164098 291.106867 l
216.306647 295.68435 l
217.410327 322.18557 l
218.130991 338.447682 l
218.245337 341.218264 l
219.134893 363.623841 l
219.396511 367.839944 l
219.512054 370.730986 l
219.889549 377.476751 l
220.251411 381.933775 l
220.452031 383.258836 l
220.581743 384.222517 l
220.792674 386.149878 l
220.899503 387.474939 l
221.11549 388.8 l
221.11549 388.8 l
S
Q
q
72 43.2 446.4 345.6 re
W
1 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
173.953805 43.2 m
174.403871 44.407547 l
174.596643 44.769811 l
174.925578 45.615094 l
175.433116 47.30566 l
175.627883 48.513208 l
176.026797 51.169811 l
176.803004 54.188679 l
177.139722 55.275472 l
177.220144 56.120755 l
177.313536 56.603774 l
177.418236 57.569811 l
178.200497 68.679245 l
178.343114 71.215094 l
178.450741 72.664151 l
178.584377 74.716981 l
178.782204 77.373585 l
178.92063 79.667925 l
179.279698 84.498113 l
179.393844 85.94717 l
179.78411 89.328302 l
179.991981 91.501887 l
180.508965 95.245283 l
180.681382 95.486792 l
180.883133 96.211321 l
181.092668 96.45283 l
181.203155 96.815094 l
278.424814 96.935849 l
278.78222 98.022642 l
278.959692 98.264151 l
279.302862 99.230189 l
279.707695 100.316981 l
279.813394 100.558491 l
280.137074 100.8 l
280.496941 101.886792 l
280.685588 102.128302 l
281.040998 103.215094 l
281.154013 103.456604 l
281.423814 103.698113 l
282.474278 108.528302 l
283.085519 112.513208 l
283.190153 113.841509 l
283.246761 114.566038 l
283.435674 117.101887 l
284.810817 132.075472 l
285.120595 135.818868 l
285.280706 137.630189 l
285.431969 139.320755 l
285.869397 144.150943 l
286.412323 147.65283 l
286.528665 148.135849 l
286.763542 149.584906 l
286.927112 151.033962 l
287.341391 155.743396 l
287.741502 160.573585 l
287.966402 161.539623 l
304.94745 161.660377 l
305.728912 163.592453 l
306.152704 163.833962 l
307.550529 167.818868 l
308.107691 170.354717 l
308.379154 171.562264 l
308.68687 173.132075 l
308.945761 174.339623 l
309.032036 174.581132 l
309.817423 174.701887 l
310.152478 176.392453 l
310.304207 177.841509 l
310.658021 179.411321 l
311.07955 181.94717 l
311.389262 183.154717 l
311.81864 185.328302 l
311.994982 186.656604 l
312.260857 188.226415 l
312.375004 189.313208 l
312.558263 190.641509 l
312.751034 191.969811 l
313.415357 197.283019 l
313.530036 198.973585 l
313.61345 199.818868 l
313.726998 201.388679 l
313.831299 202.716981 l
313.943783 204.407547 l
314.547241 211.532075 l
314.645489 212.377358 l
314.851365 214.188679 l
315.090766 215.275472 l
315.257329 216.120755 l
316.17888 220.588679 l
316.346508 220.830189 l
316.980432 223.969811 l
317.118791 224.815094 l
317.692715 226.74717 l
318.103069 227.713208 l
318.309011 228.196226 l
318.49227 228.437736 l
318.720829 229.403774 l
333.16352 229.524528 l
333.367467 230.249057 l
338.448637 230.490566 l
338.48356 230.611321 l
339.461718 230.732075 l
339.502162 230.85283 l
340.688192 231.335849 l
340.783912 231.577358 l
341.2093 231.818868 l
341.384843 232.060377 l
341.421096 232.181132 l
341.935552 232.422642 l
342.020629 232.784906 l
343.506326 232.90566 l
343.6383 233.267925 l
416.732997 233.388679 l
417.563019 236.890566 l
417.65089 237.615094 l
419.420556 245.826415 l
419.541952 246.792453 l
419.727207 248 l
419.917451 248.603774 l
421.564988 253.071698 l
423.384343 260.8 l
440.83548 260.920755 l
441.199604 261.886792 l
441.42896 262.369811 l
441.534393 262.611321 l
441.732219 262.85283 l
441.989714 263.456604 l
443.183526 266.958491 l
443.375766 268.528302 l
444.912483 280.724528 l
445.059822 282.656604 l
445.366141 286.158491 l
445.472172 287.849057 l
445.817537 293.041509 l
446.025741 295.939623 l
446.382814 300.528302 l
446.715408 303.909434 l
446.82084 304.996226 l
446.945297 305.962264 l
447.049931 306.807547 l
447.519753 309.464151 l
447.929309 313.328302 l
448.103122 315.622642 l
448.21534 316.830189 l
448.33361 318.279245 l
448.57075 319.849057 l
448.689353 320.69434 l
448.808222 321.781132 l
448.936802 322.74717 l
449.036714 323.713208 l
450.338553 332.649057 l
450.962898 335.667925 l
451.207355 337.237736 l
451.355758 337.841509 l
463.07098 337.962264 l
463.717941 339.532075 l
464.107475 339.773585 l
464.902042 341.94717 l
467.559534 353.056604 l
468.018181 353.298113 l
469.546583 357.283019 l
469.70084 357.645283 l
469.9737 358.369811 l
470.201394 358.85283 l
470.811837 361.388679 l
470.94401 361.992453 l
471.025761 362.475472 l
471.23789 364.407547 l
471.475561 365.856604 l
471.814807 368.392453 l
472.225228 371.532075 l
472.429175 372.860377 l
472.479662 372.981132 l
473.711191 373.343396 l
474.114295 374.550943 l
475.183717 376.483019 l
476.041943 378.05283 l
476.524337 379.622642 l
476.787419 380.10566 l
477.360478 381.916981 l
477.568615 382.520755 l
478.028393 383.366038 l
478.221497 383.728302 l
478.620477 385.056604 l
479.029767 386.626415 l
491.050776 386.74717 l
491.293503 387.350943 l
492.580508 387.471698 l
492.641905 387.713208 l
494.616914 387.833962 l
494.682235 388.075472 l
498.278241 388.196226 l
498.313695 388.316981 l
499.842829 388.437736 l
499.987441 388.8 l
499.987441 388.8 l
S
Q
0 J
/DeviceGray {} cs
[0] sc
0.5 w
/DeviceGray {} CS
[0] SC
72 43.2 m
72 47.2 l
f
72 43.2 m
72 47.2 l
S
72 388.8 m
72 384.8 l
f
72 388.8 m
72 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
68.976563 30.29375 Td
/F14_0 12 Tf
(0) 7.632 Tj
/DeviceGray {} cs
[0] sc
0.5 w
127.8 43.2 m
127.8 47.2 l
f
127.8 43.2 m
127.8 47.2 l
S
127.8 388.8 m
127.8 384.8 l
f
127.8 388.8 m
127.8 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
117.175 30.29375 Td
/F14_0 12 Tf
(200) 22.896 Tj
/DeviceGray {} cs
[0] sc
0.5 w
183.6 43.2 m
183.6 47.2 l
f
183.6 43.2 m
183.6 47.2 l
S
183.6 388.8 m
183.6 384.8 l
f
183.6 388.8 m
183.6 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
172.834375 30.29375 Td
/F14_0 12 Tf
(400) 22.896 Tj
/DeviceGray {} cs
[0] sc
0.5 w
239.4 43.2 m
239.4 47.2 l
f
239.4 43.2 m
239.4 47.2 l
S
239.4 388.8 m
239.4 384.8 l
f
239.4 388.8 m
239.4 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
228.759375 30.29375 Td
/F14_0 12 Tf
(600) 22.896 Tj
/DeviceGray {} cs
[0] sc
0.5 w
295.2 43.2 m
295.2 47.2 l
f
295.2 43.2 m
295.2 47.2 l
S
295.2 388.8 m
295.2 384.8 l
f
295.2 388.8 m
295.2 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
284.54375 30.29375 Td
/F14_0 12 Tf
(800) 22.896 Tj
/DeviceGray {} cs
[0] sc
0.5 w
351 43.2 m
351 47.2 l
f
351 43.2 m
351 47.2 l
S
351 388.8 m
351 384.8 l
f
351 388.8 m
351 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
336.773437 30.29375 Td
/F14_0 12 Tf
(1000) 30.528 Tj
/DeviceGray {} cs
[0] sc
0.5 w
406.8 43.2 m
406.8 47.2 l
f
406.8 43.2 m
406.8 47.2 l
S
406.8 388.8 m
406.8 384.8 l
f
406.8 388.8 m
406.8 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
392.573437 30.29375 Td
/F14_0 12 Tf
(1200) 30.528 Tj
/DeviceGray {} cs
[0] sc
0.5 w
462.6 43.2 m
462.6 47.2 l
f
462.6 43.2 m
462.6 47.2 l
S
462.6 388.8 m
462.6 384.8 l
f
462.6 388.8 m
462.6 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
448.373437 30.29375 Td
/F14_0 12 Tf
(1400) 30.528 Tj
/DeviceGray {} cs
[0] sc
0.5 w
518.4 43.2 m
518.4 47.2 l
f
518.4 43.2 m
518.4 47.2 l
S
518.4 388.8 m
518.4 384.8 l
f
518.4 388.8 m
518.4 384.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
504.173438 30.29375 Td
/F14_0 12 Tf
(1600) 30.528 Tj
[1 0 0 1 0 0] Tm
0 0 Td
265.457813 15.996875 Td
/F14_0 12 Tf
(Time \(ms\)) 60.852 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 43.2 m
76 43.2 l
f
72 43.2 m
76 43.2 l
S
518.4 43.2 m
514.4 43.2 l
f
518.4 43.2 m
514.4 43.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.5 38.832813 Td
/F14_0 12 Tf
(0.0) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 112.32 m
76 112.32 l
f
72 112.32 m
76 112.32 l
S
518.4 112.32 m
514.4 112.32 l
f
518.4 112.32 m
514.4 112.32 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.90625 107.952813 Td
/F14_0 12 Tf
(0.2) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 181.44 m
76 181.44 l
f
72 181.44 m
76 181.44 l
S
518.4 181.44 m
514.4 181.44 l
f
518.4 181.44 m
514.4 181.44 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.375 177.072813 Td
/F14_0 12 Tf
(0.4) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 250.56 m
76 250.56 l
f
72 250.56 m
76 250.56 l
S
518.4 250.56 m
514.4 250.56 l
f
518.4 250.56 m
514.4 250.56 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.46875 246.192813 Td
/F14_0 12 Tf
(0.6) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 319.68 m
76 319.68 l
f
72 319.68 m
76 319.68 l
S
518.4 319.68 m
514.4 319.68 l
f
518.4 319.68 m
514.4 319.68 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
50.53125 315.312813 Td
/F14_0 12 Tf
(0.8) 19.08 Tj
/DeviceGray {} cs
[0] sc
0.5 w
72 388.8 m
76 388.8 l
f
72 388.8 m
76 388.8 l
S
518.4 388.8 m
514.4 388.8 l
f
518.4 388.8 m
514.4 388.8 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
51.015625 384.432812 Td
/F14_0 12 Tf
(1.0) 19.08 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 45.375 134.414062] Tm
0 0 Td
0 2.5 Td
/F14_0 12 Tf
(Fraction of applied updates) 164.604 Tj
2 J
72 388.8 m
518.4 388.8 l
S
518.4 43.2 m
518.4 388.8 l
S
72 43.2 m
518.4 43.2 l
S
72 43.2 m
72 388.8 l
S
0 J
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
152.278125 393.8 Td
/F14_0 14.4 Tf
(Time to use the new configuration rules) 287.4528 Tj
2 J
/DeviceGray {} cs
[1] sc
320.000625 50.4 191.199375 84.604375 re
f
320.000625 50.4 191.199375 84.604375 re
S
/DeviceRGB {} CS
[0 0 1] SC
330.080625 123.64375 m
350.240625 123.64375 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 118.60375 Td
/F14_0 14.4 Tf
(VF-loop) 54.1008 Tj
2 J
/DeviceRGB {} CS
[0 0.5 0] SC
330.080625 102.896875 m
350.240625 102.896875 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 97.856875 Td
/F14_0 14.4 Tf
(VF-loop-blackhole) 128.3328 Tj
2 J
/DeviceRGB {} CS
[1 0 0] SC
330.080625 82.15 m
350.240625 82.15 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 77.11 Td
/F14_0 14.4 Tf
(Consistent-Updates) 141.1344 Tj
2 J
/DeviceRGB {} CS
[0 0.75 0.75] SC
330.080625 61.403125 m
350.240625 61.403125 l
S
0 J
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
[1 0 0 1 0 0] Tm
0 0 Td
366.080625 56.363125 Td
/F14_0 14.4 Tf
(Incremental CU) 111.7296 Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
